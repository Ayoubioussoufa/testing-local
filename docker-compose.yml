version: '3'

services:
  frontend:
    container_name: front
    build: ./front
    ports:
      - "8080:80"
    networks:
      - my-net
    depends_on:
      - web
      - backend
    volumes:
      - ./front:/usr/share/nginx/html

  web:
    container_name: web
    build: ./project
    command: python3 manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    depends_on:
      - db
      - geth_node
    environment:
      - DB_NAME=ft_transcandencedb
      - DB_USER=othmane
      - DB_PASSWORD=otitebah1234
      - DB_HOST=db
      - DB_PORT=5432
      - ETH_NODE_URL=http://geth:8545
      - PYTHONUNBUFFERED=1
    networks:
      - my-net
    volumes:
      - ./project:/usr/src/app

  db:
    container_name: database
    image: postgres:14
    environment:
      POSTGRES_DB: ft_transcandencedb
      POSTGRES_USER: othmane
      POSTGRES_PASSWORD: otitebah1234
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my-net

  backend:
    container_name: backend
    build: ./backend
    restart: always
    ports:
      - "8001:8001"
    volumes:
      - ./backend:/backend
    networks:
      - my-net
    environment:
      - PYTHONUNBUFFERED=1
  
  geth_node:
    image: ethereum/client-go:latest
    container_name: geth-node
    command: ["--http", "--http.addr", "0.0.0.0", "--http.port", "8545", "--http.api", "web3,eth,net,personal"]

    ports:
      - "8545:8545"   # Exposes the RPC port
    volumes:
      - ./data:/root/.ethereum
    networks:
      - my-net
    environment:
      - GETH_DATA_DIR=/root/.ethereum
    healthcheck:  
      test: ["CMD", "curl", "-f", "http://localhost:8545"]
      interval: 30s
      retries: 3

volumes:
  postgres_data:

networks:
  my-net:
